{"mappings":"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","sources":["main.js"],"sourcesContent":["'use strict';\n\n// „Éâ„Éü„Éé„Çµ„Ç§„Ç∫\nconst BLOCK_SIZE = 30;\n// field size\nconst FIELD_COL = 10;\nconst FIELD_ROW = 20; \n// screen size;\nconst SCREEN_W = FIELD_COL * BLOCK_SIZE;\nconst SCREEN_H = FIELD_ROW * BLOCK_SIZE;\n\nconst TETRO_Y = 0;\nconst TETRO_SIZE = 4;\nconst TETRO_X = FIELD_COL / 2 - TETRO_SIZE / 2;\n\n// tetro„ÅÆÂ∫ßÊ®ô\nlet tetro_x = TETRO_X; \nlet tetro_y = TETRO_Y;\n\n// tetro screen\nlet field=[];\n\n// tetro speed;\nconst TETRO_SPEED = 500;\n\n\nconst can = document.getElementById('can');\nconst con = can.getContext('2d');\n\n// „Çπ„ÇØ„É™„Éº„É≥„Çµ„Ç§„Ç∫\ncan.width = SCREEN_W;\ncan.height = SCREEN_H;\n\nlet intervalID;\nlet flag = true;\nlet gameOver = false;\n\n// „ÉÜ„Éà„É≠\nconst TETRO_TYPES = [\n\t[],\t// 0.Á©∫„Å£„ÅΩ\n\t\n\t[\t\t\t\t\t// 1.I\n\t\t[ 0, 0, 0, 0 ],\n\t\t[ 1, 1, 1, 1 ],\n\t\t[ 0, 0, 0, 0 ],\n\t\t[ 0, 0, 0, 0 ]\n\t],\n\t[\t\t\t\t\t// 2.L\n\t\t[ 0, 1, 0, 0 ],\n\t\t[ 0, 1, 0, 0 ],\n\t\t[ 0, 1, 1, 0 ],\n\t\t[ 0, 0, 0, 0 ]\n\t],\n\t[\t\t\t\t\t// 3.J\n\t\t[ 0, 0, 1, 0 ],\n\t\t[ 0, 0, 1, 0 ],\n\t\t[ 0, 1, 1, 0 ],\n\t\t[ 0, 0, 0, 0 ]\n\t],\n\t[\t\t\t\t\t// 4.T\n\t\t[ 0, 1, 0, 0 ],\n\t\t[ 0, 1, 1, 0 ],\n\t\t[ 0, 1, 0, 0 ],\n\t\t[ 0, 0, 0, 0 ]\n\t],\n\t[\t\t\t\t\t// 5.O\n\t\t[ 0, 0, 0, 0 ],\n\t\t[ 0, 1, 1, 0 ],\n\t\t[ 0, 1, 1, 0 ],\n\t\t[ 0, 0, 0, 0 ]\n\t],\n\t[\t\t\t\t\t// 6.Z\n\t\t[ 0, 0, 0, 0 ],\n\t\t[ 1, 1, 0, 0 ],\n\t\t[ 0, 1, 1, 0 ],\n\t\t[ 0, 0, 0, 0 ]\n\t],\n\t[\t\t\t\t\t// 7.S\n\t\t[ 0, 0, 0, 0 ],\n\t\t[ 0, 1, 1, 0 ],\n\t\t[ 1, 1, 0, 0 ],\n\t\t[ 0, 0, 0, 0 ]\n\t]\n];\n\nconst TETRO_COLOR = [\n    \"#0000FF\",\n    \"#008080\",\n    \"#008000\",\n    \"#00FF00\",\n    \"#00FFFF\",\n    \"#FF00FF\",\n    \"#800080\",\n    \"#FFFF00\",\n  \n]\n\n// random\nlet tetro;\nlet tetroColor;\n\n// set tetro type; \n\nconst setTetro = function(){\n    let tetroType = Math.floor(Math.random()*(TETRO_TYPES.length-1))+1;\n    tetro = TETRO_TYPES[tetroType];\n    tetroColor = TETRO_COLOR[tetroType];\n\n}\n\n//ÂàùÊúüÂåñ„ÄÄinit() „Éï„Ç£„Éº„É´„Éâ„ÅÆÈÖçÂàó„Çí‰ΩúÊàê„Åô„Çã\nconst init = function(){\n    for(let y=0; y< FIELD_ROW; y++){\n        field[y] =[];\n        for(let x=0; x<FIELD_COL; x++){\n            field[y][x]=0;\n        }\n    }\n    \n}\n\n\n\n// „Éñ„É≠„ÉÉ„ÇØÔºë„Å§„ÇíÊèèÁîª„Åô„Çã\nconst drawBlock = function(x,y,NewTetro_X,NewTetro_Y){\n    // con.clearRect(0,0,SCREEN_W,SCREEN_H);\n    // console.log(NewTetro_X * BLOCK_SIZE + x * BLOCK_SIZE,NewTetro_Y * BLOCK_SIZE + y * BLOCK_SIZE)\n    con.fillStyle = tetroColor;\n    con.fillRect(NewTetro_X * BLOCK_SIZE + x * BLOCK_SIZE,NewTetro_Y * BLOCK_SIZE + y * BLOCK_SIZE,BLOCK_SIZE,BLOCK_SIZE);\n    con.strokeStyle ='black';\n    con.strokeRect(NewTetro_X * BLOCK_SIZE + x * BLOCK_SIZE,NewTetro_Y * BLOCK_SIZE + y * BLOCK_SIZE,BLOCK_SIZE,BLOCK_SIZE);\n    con.strokeRect(0,0,SCREEN_W,SCREEN_H);\n\n}\n\n\n// ÂÖ®ÈÉ®ÊèèÁîª„Åô„Çã  clear Rect „Åó„Å¶„ÄÄ\nconst drawTetro = function(){\n   \n    con.clearRect(0,0,SCREEN_W,SCREEN_H);\n    for(let y=0; y<TETRO_SIZE; y++){\n        for(let x=0; x<TETRO_SIZE; x++){\n            \n            if(tetro[y][x]) drawBlock(x,y,tetro_x,tetro_y);\n        }\n    }\n    for(let y=0; y<FIELD_ROW; y++){\n        for(let x=0; x<FIELD_COL; x++){\n            if(field[y][x]) drawBlock(x,y,0,0);\n        }\n    }\n\n}\n\n// „Éñ„É©„ÉÉ„ÇØ„ÅÆË°ùÁ™ÅÂà§ÂÆö\nconst checkTetro = function(i,m,newTetro){\n    if(!newTetro) newTetro = tetro;\n    let NewTetro_X = tetro_x + i;\n    let NewTetro_Y = tetro_y + m;\n    for(let y=0; y<TETRO_SIZE; y++){\n        for(let x=0; x<TETRO_SIZE; x++){\n            if(newTetro[y][x]){\n                if(NewTetro_Y+y>FIELD_ROW-1 || \n                    NewTetro_X+x<0 || \n                    NewTetro_X+x>FIELD_COL-1||\n                    field[NewTetro_Y+y][NewTetro_X+x]\n                ) {return false;}\n            }\n        }\n    }\n    return true;\n\n}\n\n\n// „Å¶„Å®„Çç„ÅÆÂõûËª¢\nconst turnTetro = function(){\n    let newTetro =[];\n\n    for(let y=0; y<TETRO_SIZE; y++){\n        newTetro[y]=[];\n        for(let x=0;x<TETRO_SIZE; x++){\n            newTetro[y][x]=tetro[TETRO_SIZE-1-x][y];\n        }\n\n    }\n    return newTetro;\n\n}\n\n\n// „Å¶„Éà„É≠„ÅÆÂõ∫ÂÆö\nconst fixTetro = function(){\n    for(let y = 0; y< TETRO_SIZE; y++){\n        for(let x=0; x<TETRO_SIZE; x++){\n            if(tetro[y][x]){\n                field[tetro_y+y][tetro_x+x]=1;\n            }\n        }\n    }\n    drawTetro();\n   \n}\n\n\n\n// „É©„Ç§„É≥„ÅåÊèÉ„Å£„Åü„Åã„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶Ê∂à„Åô\nconst deleteLine = function(){\n    for(let y=0; y<FIELD_ROW; y++){\n        let linecheck = 0;\n        for(let x=0; x<FIELD_COL; x++){\n            if(field[y][x])linecheck++;\n        }\n\n    \n\n    if(linecheck===10){\n        for(let ny=y; ny>1; ny--){\n            for(let nx=0; nx<FIELD_COL; nx++){\n            field[ny][nx] = field[ny-1][nx];\n            }\n        }\n        linecheck =0;\n    }\n}\n}\n\n// „Éñ„É≠„ÉÉ„ÇØ„ÅÆËêΩ„Å°„ÇãÂá¶ÁêÜ\nconst dropTetro = function(){\n    console.log(TETRO_Y);\n    console.log(field[TETRO_Y][TETRO_X]);\n        if(field[TETRO_Y][TETRO_X]){\n            console.log(tetro_y&\"üíê\");\n            gameOver=true;\n            return;\n        }\n\n        if(!checkTetro(0,1)){\n            fixTetro();\n            deleteLine();\n            tetro_x=TETRO_X;\n            tetro_y=TETRO_Y;\n            setTetro();\n        };\n    tetro_y++;\n    drawTetro();\n}\n\n\n\n// „Ç≠„Éº„Éú„Éº„Éâ„ÅåÊäº„Åï„Çå„ÅüÊôÇ„ÅÆÂá¶ÁêÜ\nwindow.addEventListener('keydown',function(e){\n\n    switch(e.key){\n        \n        // up\n        // case  'ArrowUp':\n        //     checkTetro(0,-1);\n        //     tetro_y--;\n        //     drawTetro();\n        //     break;\n        // right\n        case  'ArrowRight':\n            if(checkTetro(1,0)) tetro_x++;\n            drawTetro();\n            break;\n        // down\n        case  'ArrowDown':\n            dropTetro();\n            break;\n        // left   \n        case  'ArrowLeft':\n            if(checkTetro(-1,0)) tetro_x--;\n            drawTetro();\n            break;\n        // turn \n        case ' ' :\n           let newTetro = turnTetro();\n            if(checkTetro(0,0, newTetro)) tetro = newTetro;\n            drawTetro();\n            break;\n\n    }\n\n})\n\n\nconst startTetro = function(){\n    setTetro();\n    intervalID = setInterval(function(){\n        if(gameOver){\n            clearInterval(intervalID);\n            alert('GAME OVER');\n        }\n\n        dropTetro();\n        deleteLine();\n        // dropTetro()   ;\n         \n        },TETRO_SPEED);\n\n}\n\n\n\n// init „Å´ÂÖ•„Çå„Çã„ÄÄ\ninit();\n\n// drawTetro();\nstartTetro();\n\n// if(gameOver){\n//     clearInterval(intervalID);\n    \n//  }"],"names":[],"version":3,"file":"index.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}